name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  test-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: './back_end/package-lock.json'

      - name: Install dependencies
        run: |
          cd back_end
          npm ci

      - name: Run tests
        run: |
          cd back_end
          npm test

  build-and-deploy-backend:
    needs: test-backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./back_end
          push: true
          tags: ismaillf/scene_stream:backend-latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-and-deploy-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      # Create .env file for frontend build
      - name: Setup Environment Variables
        run: |
          cd frontend
          echo "VITE_APP_BACKEND_URL=${{ secrets.BACKEND_API_URL }}" > .env

      - name: Build and push frontend Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          push: true
          tags: ismaillf/scene_stream:frontend-latest
          cache-from: type=gha
          cache-to: type=gha,mode=max